##
# RPi Build
#
# Pulls and builds from the individual application repositories 
# responsible for the the code running on the Raspberry Pi that ships with
# the OpenTrons robot.
#
# This script can be run on any 64-bit ARMv7 machine. You can't just run it on
# your own computer, though, or the Docker files won't work properly on the 
# Raspberry Pi.
#
# This can run directly on the host Raspberry Pi, or you can use a beefier
# ARM, like a Tegra K1 chip or a Beaglebone.
#
# Then run the rpi_setup.yml playbook to move the files and ensure all the
# proper directories are in place.
##

- hosts: localhost

  vars:
    date: "{{ ansible_date_time.date }}"
    repo_root: ~/repos
    build_path: ~/builds
    org_name: "opentrons"
    repo_tag: master # Change this to 'stable' eventually.
    frontend_repo: pi-frontend
    driver_repo: pi-driver
    labware_repo: pi-labware
    default_tag: master
    frontend_tag: "{{ default_tag }}"
    driver_tag: "{{ default_tag }}"
    labware_tag: "{{ default_tag }}"
    labware_image: "labware"
    driver_image: "driver"
    frontend_image: "frontend"

  tasks:
    - name: Create repository root
      file: |
        path={{ repo_root }}
        state=directory

    - name: Check if free disk percentage is too low
      debug: msg="{{ item.size_available }}"
      with_items: "hostvars[inventory_hostname].ansible_mounts"

    - name: Create build directory
      file: |
        path={{ build_path }}
        state=directory

    - name: "Clone frontend repository"
      git: |
        repo=https://github.com/Opentrons/{{ frontend_repo }}.git
        dest={{ repo_root }}/pi-frontend
        version={{ frontend_tag }}

    - name: "Clone driver repository"
      git: |
        repo=https://github.com/Opentrons/{{ driver_repo }}.git
        dest={{ repo_root }}/pi-driver
        version={{ driver_tag }}

    - name: "Clone labware repository"
      git: |
        repo=https://github.com/Opentrons/{{ labware_repo }}.git
        dest={{ repo_root }}/pi-labware
        version={{ labware_tag }}

    # Frontend build

    - name: Build frontend Docker image
      shell: "docker build -t {{ frontend_image }}:{{ frontend_tag }} {{ repo_root }}/{{ frontend_repo }}"

    # frontend test needs to live here to run before we export.

    - name: Export frontend image as tarball
      shell: |
        docker save -o {{ build_path }}/{{ frontend_image }}_{{ frontend_tag }}_{{ date }}.tar.gz \
        {{ frontend_image }}:{{ frontend_tag }}

    - name: Build driver Docker image
      shell: "docker build -t {{ driver_image }}:{{ driver_tag }} {{ repo_root }}/{{ driver_repo }}"

    # driver test needs to live here to run before we export.

    - name: Export driver image as tarball
      shell: |
        docker save -o {{ build_path }}/{{ driver_image }}_{{ driver_tag }}_{{ date }}.tar.gz \
        {{ driver_image }}:{{ driver_tag }}

    - name: Build labware Docker image
      shell: "docker build -t {{ labware_image }}:{{ labware_tag }} {{ repo_root }}/{{ labware_repo }}"

    # labware test needs to live here to run before we export.

    - name: Export labware image as tarball
      shell: |
        docker save -o {{ build_path }}/{{ labware_image }}_{{ labware_tag }}_{{ date }}.tar.gz \
        {{ labware_image }}:{{ labware_tag }}
